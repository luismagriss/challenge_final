name: Run Robot Framework Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # Adicione este passo se sua API for Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a versão do Node.js do seu projeto

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          echo "Installing backend dependencies..."
          cd backend && npm install && cd ..

          echo "Installing frontend dependencies..."
          cd frontend && npm install && cd ..

      - name: Initialize RF-Browser
        # ✅ PASSO NOVO: Instala os navegadores para o Robot Framework Browser
        run: rfbrowser init

      - name: Start Servers in Background
        # ✅ PASSO NOVO: Inicia o servidor da API e o deixa rodando em background (&)
        # O comando 'npm run dev' é um exemplo, ajuste para o comando da sua API.
        run: |
          echo "Starting backend server..."
          cd backend && npm run dev &
          
          echo "Starting frontend server..."
          cd frontend && npm start &

          # Aumenta o tempo de espera para dar tempo dos dois servidores subirem
          echo "Waiting for servers to start..."
          sleep 20

      - name: Run Robot Framework tests
      
        run: robot -d results tests/

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-framework-results
          path: results/